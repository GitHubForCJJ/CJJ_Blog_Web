
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .menucont {
        width: 100%;
        height: 100%;
        position: relative;
    }

    .left {
        width: 40rem;
        height: 100rem;
        margin-right: 3rem;
        position: absolute;
        top: 0;
        left: 0;
    }

    .right {
        width: 50rem;
        height: 100rem;
        position: absolute;
        top: 0;
        right: 0;
    }

    .layui-card {
        padding: 2rem;
    }
</style>
<div class="layui-fluid">
    <div class="layui-row layui-col-space15">
        <div class="layui-col-md5">
            <div class="layui-card">
                <div class="layui-card-header">菜单列表</div>
                <div class="layui-card-body">
                    <ul id="LAY-Menu-Tree" class="ztree"></ul>
                </div>

            </div>
        </div>
        <div class="layui-col-md7">
            <div class="layui-card">
                <div class="layui-card-header">当前菜单</div>

                <form class="layui-form">
                    <div class="layui-form-item">
                        <label class="layui-form-label">菜单名称</label>
                        <div class="layui-input-block">
                            <input type="text" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">菜单名称</label>
                        <div class="layui-input-block">
                            <input type="text" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">图标</label>
                        <div class="layui-input-block">
                            <input type="text" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">URL</label>
                        <div class="layui-input-block">
                            <input type="text" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">显示顺序</label>
                        <div class="layui-input-block">
                            <input type="text" class="layui-input" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label"></label>
                        <div class="layui-input-block">
                            越靠前越大
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">描述信息</label>
                        <div class="layui-input-block">
                            <textarea class="layui-textarea"></textarea>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">描述信息</label>
                        <div class="layui-input-block">
                            <button class="layui-btn layui-btn-disabled">立即提交</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>
<link href="~/Content/zTree_v3-master/css/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
<script src="~/Content/zTree_v3-master/js/jquery-1.4.4.min.js"></script>
<script src="~/Content/zTree_v3-master/js/jquery.ztree.all.js"></script>
<script type="text/javascript">

    $(function () {
        var setting = {
            view: {
                addHoverDom: addHoverDom,
                removeHoverDom: removeHoverDom,
                selectedMulti: false
            },
            edit: {
                enable: true,
                editNameSelectAll: true,
                showRemoveBtn: showRemoveBtn,
                showRenameBtn: false
            },
            data: {
                key: {
                    name: 'name'
                },
                simpleData: {
                    enable: true,
                    idKey: 'id',
                    pIdKey: 'pId'
                }
            },
            callback: {
                beforeRemove: beforeRemove,
                onClick: onClick
            }
        };
        var zNodes = [];
        // 是否显示删除按钮
        function showRemoveBtn(treeId, treeNode) {
            return treeNode.KID != 0;
        }
        // 点击node
        function onClick(event, treeId, treeNode, clickFlag) {
            $operate.val('edit');
            reForm();
            if (treeNode.KID == 0) {
                layer.msg('顶级目录不允许编辑');
                clearForm();
                return;
            }
            $('input[name="MenuName"]').val(treeNode.MenuName);
            $('input[name="KID"]').val(treeNode.KID);
            $('input[name="MenuIco"]').val(treeNode.MenuIco);
            $('input[name="MenuUrl"]').val(treeNode.MenuUrl);
            $('input[name="MenuSort"]').val(treeNode.MenuSort);
            $('input[name="MenuMsg"]').val(treeNode.MenuMsg);
            $FatherID.val(treeNode.FatherID);
        }
        // 删除前
        function beforeRemove(treeId, treeNode, isdelcallback) {
            var zTree = $.fn.zTree.getZTreeObj('LAY-MenuMana-Tree');
            zTree.selectNode(treeNode);

            if (treeNode.children) {
                layer.msg('该菜单下有子菜单，不能删除！');
                return false;
            }
            if (isdelcallback == 1) {
                $('#' + treeNode.tId).remove();
                var data = {};
                data.kid = treeNode.KID;
                if (data.kid) {
                    GHM.post(GHM_config.url.DelItemMenuByKid, { Data: JSON.stringify(data) }).then(function () {
                        initTree();
                        layer.msg('删除成功');
                    })
                }
            } else {
                layer.confirm('确认删除 菜单 -- ' + treeNode.MenuName + ' 吗？', {
                    btn: ['确认', '取消']
                }, function () {
                    //执行删除操作
                    beforeRemove(treeId, treeNode, 1);
                    layer.closeAll();
                });
                return false;
            }
        }
        // 鼠标移入事件
        function addHoverDom(treeId, treeNode) {
            var sObj = $('#' + treeNode.tId + '_span');
            if (treeNode.editNameFlag || $('#addBtn_' + treeNode.tId).length > 0) return;
            var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
                + "' title='add node' onfocus='this.blur();'></span>";
            sObj.after(addStr);
            var btn = $('#addBtn_' + treeNode.tId);
            //添加节点
            if (btn) btn.bind('click', function () {
                // 添加操作
                $('input[name=MenuName]').focus();
                $operate.val('add');
                clearForm();
                reForm();
                $FatherID.val(treeNode.KID);

                return false;
            });
        }

        // 鼠标移出事件
        function removeHoverDom(treeId, treeNode) {
            $('#addBtn_' + treeNode.tId).unbind().remove();
        }

        $.ajax({
            type: 'post',
            url: '/Menu/list',
            dataType: 'json',
            contentType: 'application/json',
            success: function (res) {
                console.log(res)
                zNodes = res;
                zNodes.push({ id: 0, name: '菜单管理',open:'true' });
                console.log(zNodes)
                $.fn.zTree.init($('#LAY-Menu-Tree'), setting, zNodes);
            },
            error: function (err) {
                console.log(err)
            }

        })

    })


</script>


@*<script type="text/javascript">
        //layui模块的使用
        layui.use(['zTree', 'jquery'], function (args) {
            var $ = layui.$, zTree = layui.zTree

            $(function () {
                var setting = {
                    view: {
                        addHoverDom: addHoverDom,
                        removeHoverDom: removeHoverDom,
                        selectedMulti: false
                    },
                    edit: {
                        enable: true,
                        editNameSelectAll: true,
                        showRemoveBtn: showRemoveBtn,
                        showRenameBtn: false
                    },
                    data: {
                        key: {
                            name: 'MenuName'
                        },
                        simpleData: {
                            enable: true,
                            idKey: 'KID',
                            pIdKey: 'FatherID'
                        }
                    },
                    callback: {
                        beforeRemove: beforeRemove,
                        onClick: onClick
                    }
                };
                var zNodes = [];
                // 鼠标移入事件
                function addHoverDom(treeId, treeNode) {
                    var sObj = $('#' + treeNode.tId + '_span');
                    if (treeNode.editNameFlag || $('#addBtn_' + treeNode.tId).length > 0) return;
                    var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
                        + "' title='add node' onfocus='this.blur();'></span>";
                    sObj.after(addStr);
                    var btn = $('#addBtn_' + treeNode.tId);
                    //添加节点
                    if (btn) btn.bind('click', function () {
                        // 添加操作
                        $('input[name=MenuName]').focus();
                        $operate.val('add');
                        clearForm();
                        reForm();
                        $FatherID.val(treeNode.KID);

                        return false;
                    });
                }

                // 鼠标移出事件
                function removeHoverDom(treeId, treeNode) {
                    $('#addBtn_' + treeNode.tId).unbind().remove();
                }
            })
            zNodes =@Model;
            zNodes.push({ KID: 0, MenuName: '菜单管理' });
            console.log(zNodes)
            zTree.init($('#LAY-Menu-Tree'), setting, zNodes);

            //……

        });
    </script>*@
